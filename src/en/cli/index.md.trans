03f575af74621fcd:
  de: >-
    * Stöbern Sie im [Aktionskatalog]({{'kodex.actions.index'|href}}),
    um sich über die verschiedenen Maßnahmen zur Verbesserung
    von Privatsphäre und Sicherheit zu informieren, die der Kodex
    anbietet.
  en: >-
    <md-list v="*">Browse the <md-link href="PGlnbm9yZSB2PSJlM3NuYTI5a1pYZ3VZV04wYVc5dWN5NXBibVJsZUNkOGFISmxabjE5IiAvPg==">action
    catalogue</md-link> to learn about all the different privacy-
    & security-enhancing actions that Kodex offers.</md-list>
0a024693905ef05d:
  de: >-
    * Schauen Sie sich die [Dokumentation zu den Blaupausen]({{'kodex.blueprints'|href}})
    an, um zu erfahren, wie Sie mit Kodex Ihre eigenen Blaupausen
    zum Thema Datenschutz und Sicherheit schreiben können.
  en: >-
    <md-list v="*">Check out the <md-link href="PGlnbm9yZSB2PSJlM3NuYTI5a1pYZ3VZbXgxWlhCeWFXNTBjeWQ4YUhKbFpuMTkiIC8-">blueprints
    documentation</md-link> to learn how to write your own privacy
    & security blueprints with Kodex.</md-list>
0ba5ea9cb632c899:
  de: </aside>
  en: </aside>
126b139d4b9dd4a3:
  de: >-
    Zunächst müssen Sie das Kodex CLI-Tool herunterladen oder
    erstellen. Auf unserer [Website]({{'urls.download'|translate}})
    können Sie vorkompilierte Binärdateien für verschiedene Plattformen
    herunterladen. Alternativ können Sie das Tool aus dem Quellcode
    erstellen, indem Sie den Anweisungen auf unserer [Github-Seite](https://github.com/kiprotect/kodex)
    folgen.
  en: >-
    First, you need to download or build the Kodex CLI tool. You
    can download pre-built binaries for various platforms on our
    <md-link href="PGlnbm9yZSB2PSJlM3NuZFhKc2N5NWtiM2R1Ykc5aFpDZDhkSEpoYm5Oc1lYUmxmWDA9IiAvPg==">website</md-link>.
    Alternatively, you can build the tool from source by following
    the instructions on our <md-link href="aHR0cHM6Ly9naXRodWIuY29tL2tpcHJvdGVjdC9rb2RleA==">Github
    page</md-link>.
1cbba3ff398190cd:
  de: '## Haben Sie Fragen?'
  en: <md-heading v="##">Questions?</md-heading>
1fbedcf7da8e14b3:
  de: 'Haben Sie Fragen zum Kodex? Sie können Folgendes tun:'
  en: >-
    Do you have questions regarding Kodex? You can do the following:
336c3963e1940aa6:
  de: '# Befehlszeilenschnittstelle (CLI)'
  en: <md-heading v="#">Command Line Interface (CLI)</md-heading>
468e9e464c3d8bfa:
  de: >-
    Dadurch wird die Konfiguration aus der Blueprint-Datei (`pseudonymize.yml`)
    geladen. Diese Datei gibt an, woher Daten gelesen werden sollen
    (in diesem Fall eine JSON-Datei), wie die Daten umgewandelt
    werden sollen (in diesem Fall unter Verwendung einer Pseudonymisierung)
    und wohin die resultierenden Ausgabedaten gesendet werden
    sollen (wieder eine JSON-Datei).
  en: >-
    This will load the configuration from the blueprint file (`pseudonymize.yml`).
    This file specifies from where data should be read (a JSON
    file in this case), how the data should be transformed (using
    a pseudonymization in this case) and where the resulting output
    data should be sent to (a JSON file again).
4e5c8de8f9bed084:
  de: >-
    Die Kodex-Befehlszeilenschnittstelle (CLI) ist der einfachste
    Weg, um mit dem Datenschutz und der Sicherheitstechnik zu
    beginnen. Sie ermöglicht es Ihnen, eine breite Palette von
    datenschutz- und sicherheitsfördernden Transformationen sowie
    Analysen Ihrer strukturierten Daten durchzuführen.
  en: >-
    The Kodex command line interface (CLI) is the easiest way
    to get started with privacy and security engineering. It enables
    you to run a wide range of privacy- & security-enhancing transformations
    as well as analyses on your structured data.
4ebd96999a97120d:
  de: >-
    die die depseudonymisierten Daten (die genau mit den Eingabedaten
    übereinstimmen sollten) ausdrucken wird. Wenn Sie selbst einen
    Pseudonymisierungsschlüssel mit der Taste `pseudonymize-with-key`,
    angegeben haben, können Sie stattdessen `depseudonymize-with-key`
    blueprint ausführen, das Sie zur Eingabe des Pseudonymisierungsschlüssels
    auffordert. Ist das nicht einfach?
  en: >-
    which will print the depseudonymized data (which should exactly
    match the input data). If you provided a pseudonymization
    key yourself by using the <md-code>pseudonymize-with-key</md-code>,
    you can run <md-code>depseudonymize-with-key</md-code> blueprint
    instead, which will ask you to enter the pseudonymization
    key. Isn't that easy?
4f0d0a31a2981376:
  de: >-
    Wie Sie sehen können, hat Kodex jedes Attribut in jedem Datenelement
    pseudonymisiert und außerdem ein neues Attribut, `_kip`, zu
    den Elementen hinzugefügt. Der Wert dieses Attributs verweist
    auf einen Parametersatz, der die kryptografischen Schlüssel
    enthält, die zur Transformation der Daten verwendet wurden.
    Die eigentlichen Schlüssel werden in einem sogenannten Parameterspeicher
    abgelegt. Wenn Sie das nicht möchten, können Sie die Schlüssel
    auch selbst verwalten: Der Blueprint `pseudonymize-with-key`
    im gleichen Verzeichnis tut dies, indem er Sie zunächst zur
    Eingabe eines Schlüssels auffordert und dann aus diesem Schlüssel
    weitere Verschlüsselungsschlüssel für die einzelnen Pseudonymisierungsoperationen
    ableitet. Die Verwaltung von Schlüsseln und Parametern ist
    ein komplexes Thema für sich, seien Sie einfach versichert,
    dass Kodex sich um die unübersichtlichen Details für Sie kümmert.
  en: >-
    As you can see, Kodex pseudonymized every attribute in every
    data item and also added a new attribute, `_kip`, to the items.
    The value of that attribute refers to a parameter set that
    contains the cryptographic keys that were used to transform
    the data. The actual keys are stored in a so-called parameter
    store. If you don't want that, you can also manage keys yourself
    as well: The `pseudonymize-with-key` blueprint in the same
    directory does that by first asking you to enter a key and
    then using that key to derive further encryption keys for
    the individual pseudonymization operations. Key & parameter
    management is a complex topic in itself, for now just rest
    assured that Kodex takes care of the messy details for you.
54d45dda4d301796:
  de: >-
    Irgendwann möchten Sie Ihre Daten vielleicht tatsächlich wieder
    depseudonymisieren. Kodex macht dies einfach, indem er eine
    `undo` Aktion zur Verfügung stellt, die auf reversible Transformationen
    wie die oben beschriebene kryptografische Pseudonymisierung
    angewendet werden kann. Um also die oben genannten Daten zu
    depseudonymisieren, können wir einfach eine Blaupause ausführen,
    die eine solche `undo` Aktion enthält:
  en: >-
    At some point you might actually want to depseudonymize your
    data again. Kodex makes this easy by providing an <md-code>undo</md-code>
    action that can be applied to reversible transformations like
    the cryptographic pseudonymization above. So, to depseudonymize
    the data above, we can simply run a blueprint that contains
    such an <md-code>undo</md-code> action:
5a5e7596355438f7:
  de: >-
    Irgendwann möchten Sie Ihre Daten vielleicht sogar wieder
    depseudonymisieren. Kodex macht dies einfach, indem es eine
    `undo` Aktion bereitstellt, die auf umkehrbare Transformationen
    wie die kryptografische Pseudonymisierung oben angewendet
    werden kann. Um also die obigen Daten zu depseudonymisieren,
    können wir einfach einen Blueprint ausführen, der eine solche
    `undo` Aktion enthält:
  en: >-
    At some point you might actually want to depseudonymize your
    data again. Kodex makes this easy by providing an `undo` action
    that can be applied to reversible transformations like the
    cryptographic pseudonymization above. So, to depseudonymize
    the data above, we can simply run a blueprint that contains
    such an `undo` action:
5bda3a0e051f71fa:
  de: >-
    Dadurch wird die Konfiguration aus der Blaupausendatei (`pseudonymize.yml`)
    geladen. Diese Datei gibt an, woher die Daten gelesen werden
    sollen (in diesem Fall eine JSON-Datei), wie die Daten transformiert
    werden sollen (in diesem Fall unter Verwendung einer Pseudonymisierung)
    und wohin die resultierenden Ausgabedaten gesendet werden
    sollen (wieder eine JSON-Datei).
  en: >-
    This will load the configuration from the blueprint file (<md-code>pseudonymize.yml</md-code>).
    This file specifies from where data should be read (a JSON
    file in this case), how the data should be transformed (using
    a pseudonymization in this case) and where the resulting output
    data should be sent to (a JSON file again).
5d9e4bf2dc99c546:
  de: >-
    was die depseudonymisierten Daten ausgibt (die genau mit den
    Eingabedaten übereinstimmen sollten). Wenn Sie selbst einen
    Pseudonymisierungsschlüssel bereitgestellt haben, indem Sie
    die `pseudonymize-with-key` verwenden, können Sie stattdessen
    `depseudonymize-with-key` blueprint ausführen, das Sie zur
    Eingabe des Pseudonymisierungsschlüssels auffordert. Ist das
    nicht einfach?
  en: >-
    which will print the depseudonymized data (which should exactly
    match the input data). If you provided a pseudonymization
    key yourself by using the `pseudonymize-with-key`, you can
    run `depseudonymize-with-key` blueprint instead, which will
    ask you to enter the pseudonymization key. Isn't that easy?
65a99ba9c06af0e8:
  de: >-
    Jetzt, da Sie die Grundlagen des Kodex CLI-Tools kennen, können
    Sie mehr ins Detail gehen. Hier ist, was Sie tun können:
  en: >-
    Now that you know the basics of the Kodex CLI tool, you can
    dive more into the details. Here's what you can do:
70579e6e5ed63a7e:
  de: >-
    Wie Sie sehen können, pseudonymisierte Kodex jedes Attribut
    in jedem Datenelement und fügte auch ein neues Attribut, `_kip`,
    zu den Elementen hinzu. Der Wert dieses Attributs bezieht
    sich auf einen Parametersatz, der die kryptografischen Schlüssel
    enthält, die zur Transformation der Daten verwendet wurden.
    Die eigentlichen Schlüssel werden in einem so genannten Parameterspeicher
    gespeichert. Wenn Sie das nicht wünschen, können Sie die Schlüssel
    auch selbst verwalten: Die `pseudonymize-with-key` Blaupause
    im gleichen Verzeichnis tut dies, indem sie Sie zunächst zur
    Eingabe eines Schlüssels auffordert und diesen Schlüssel dann
    verwendet, um weitere Verschlüsselungsschlüssel für die einzelnen
    Pseudonymisierungsoperationen abzuleiten. Die Verwaltung von
    Schlüsseln und Parametern ist an sich schon ein komplexes
    Thema, denn jetzt können Sie sicher sein, dass Kodex sich
    um die schmutzigen Details für Sie kümmert.
  en: >-
    As you can see, Kodex pseudonymized every attribute in every
    data item and also added a new attribute, <md-code>_kip</md-code>,
    to the items. The value of that attribute refers to a parameter
    set that contains the cryptographic keys that were used to
    transform the data. The actual keys are stored in a so-called
    parameter store. If you don't want that, you can also manage
    keys yourself as well: The <md-code>pseudonymize-with-key</md-code>
    blueprint in the same directory does that by first asking
    you to enter a key and then using that key to derive further
    encryption keys for the individual pseudonymization operations.
    Key & parameter management is a complex topic in itself, for
    now just rest assured that Kodex takes care of the messy details
    for you.
7c579e68435e960b:
  de: >-
    * [Schreiben Sie uns eine E-Mail](mailto:cli@kiprotect.com)
    mit Ihrer Frage.
  en: >-
    <md-list v="*"><md-link href="bWFpbHRvOmNsaUBraXByb3RlY3QuY29t">Write
    us an e-mail</md-link> with your question.</md-list>
84232f72dd532434:
  de: '## Installieren der Kodex CLI'
  en: <md-heading v="##">Installing Kodex CLI</md-heading>
846a025e3d7c0bdd:
  de: '## Erste Schritte'
  en: <md-heading v="##">Getting started</md-heading>
8c801befdd114847:
  de: '## Nächste Schritte'
  en: <md-heading v="##">Next steps</md-heading>
8e926b8d88bcac15:
  de: >-
    Der Beispiel-Blaupause, die wir ausgewählt haben, liest Datenelemente
    aus einer `input.json` Datei, die sich im gleichen Verzeichnis
    wie die Blaupause befindet, pseudonymisiert alle Attribute
    jedes Elements mit verschiedenen anwendbaren Pseudonymisierungsmethoden
    und schreibt die pseudonymisierten Daten in eine JSON-Datei
    (`pseudonymized.json`) im aktuellen Verzeichnis. So sieht
    die Ausgabe aus:
  en: >-
    The example blueprint that we picked will read data items
    from an `input.json` file located in the same directory as
    the blueprint, pseudonymize all attributes of each item using
    different applicable pseudonymization methods, and write the
    pseudonymized data to a JSON file (`pseudonymized.json`) in
    the current directory. Here's what the output looks like:
910284126bf0e5cb:
  de: >-
    Um einen Blueprint auszuführen, führen Sie einfach `kodex
    run [blueprint name]` aus. Kodex kommt mit einem kostenlosen,
    öffentlichen Repository von Beispiel-Blaupausen, die uns den
    Einstieg erleichtern. Wir können sie auch über die Kommandozeile
    herunterladen und installieren:
  en: >-
    To run a blueprint, you simply execute `kodex run [blueprint
    name]`. Kodex comes with a free, public repository of example
    blueprints that help us to get started. We can download and
    install them via the command line as well:
995244431dffd1a6:
  de: >-
    * [Öffnen Sie ein Github <tr-ignore>Issue</tr-ignore>](https://github.com/kiprotect/kodex),
    um unsere großartige Open-Source-Gemeinschaft um Hilfe zu
    bitten.
  en: >-
    <md-list v="*"><md-link href="aHR0cHM6Ly9naXRodWIuY29tL2tpcHJvdGVjdC9rb2RleA==">Open
    a Github <tr-ignore>Issue</tr-ignore></md-link> to ask our
    awesome open-source community for help.</md-list>
9ae7e8939b9fbb6d:
  de: >-
    Um eine Blaupause auszuführen, führen Sie einfach `kodex run
    [blueprint name]`. Der Kodex wird mit einer kostenlosen, öffentlichen
    Sammlung von Beispiel-Entwürfen geliefert, die uns den Einstieg
    erleichtern. Wir können sie auch über die Befehlszeile herunterladen
    und installieren:
  en: >-
    To run a blueprint, you simply execute <md-code>kodex run
    <md-link>blueprint name</md-link></md-code>. Kodex comes with
    a free, public repository of example blueprints that help
    us to get started. We can download and install them via the
    command line as well:
a1bfcf0b18e31ee1:
  de: >-
    Standardmäßig steuern wir das CLI-Tool über so genannte **Blueprints**.
    Ein Blueprint ist eine Konfigurationsdatei (oder eine Sammlung
    davon), die beschreibt, wie Kodex strukturierte Daten lesen,
    analysieren, transformieren und schreiben soll.
  en: >-
    By default, we control the CLI tool using so-called <md-strong>blueprints</md-strong>.
    A blueprint is a config file (or a collection of them) that
    describes how Kodex should read, analyze, transform and write
    structured data.
a32bc9b5d9941c43:
  de: >2-
        Die Elemente in der <code>input.json</code> Datei, die
    wir pseudonymisieren möchten.
  en: >2-
        The items in the <code>input.json</code> file that we
    want to pseudonymize.
a4c93cbd163068b9:
  de: >-
    Dies lädt unser öffentliches [Blueprints-Repository](https://github.com/kiprotect/blueprints)
    herunter und speichert es in einem lokalen Verzeichnis (standardmäßig
    `~/.kodex/blueprints`). Sie können dann jeden Blueprint ausführen,
    indem Sie einfach seinen Pfad relativ zum Blueprints-Verzeichnis
    angeben. Lassen Sie uns also ein einfaches Beispiel ausführen,
    das zeigt, wie Kodex verschiedene Datentypen pseudonymisieren
    kann:
  en: >-
    This will download our public [blueprints repository](https://github.com/kiprotect/blueprints)
    and store it in a local directory (by default `~/.kodex/blueprints`).
    You can then run any blueprint by simply specifying its path
    relative to the blueprints directory. So let's run a simple
    example that shows how Kodex can pseudonymize different data
    types:
aac32651b10f567c:
  de: </div>
  en: </div>
c5308e9f6826a176:
  de: >-
    * Schauen Sie das [Blaupausen-Repository](https://github.com/kiprotect/blueprints)
    durch, um zu sehen, wie ein bestimmtes Problem mit dem Kodex
    angegangen werden kann.
  en: >-
    <md-list v="*">Look through the <md-link href="aHR0cHM6Ly9naXRodWIuY29tL2tpcHJvdGVjdC9ibHVlcHJpbnRz">blueprints
    repository</md-link> to see how to tackle a specific problem
    with Kodex.</md-list>
d08b7612ce380eae:
  de: >-
    Der von uns gewählte Beispiel-Entwurf liest Datenelemente
    aus einer `input.json` Datei, die sich im gleichen Verzeichnis
    wie der Entwurf befindet, pseudonymisiert alle Attribute jedes
    Elements unter Verwendung verschiedener anwendbarer Pseudonymisierungsmethoden
    und schreibt die pseudonymisierten Daten in eine JSON-Datei
    (`pseudonymized.json`) im aktuellen Verzeichnis. So sieht
    die Ausgabe aus:
  en: >-
    The example blueprint that we picked will read data items
    from an <md-code>input.json</md-code> file located in the
    same directory as the blueprint, pseudonymize all attributes
    of each item using different applicable pseudonymization methods,
    and write the pseudonymized data to a JSON file (<md-code>pseudonymized.json</md-code>)
    in the current directory. Here's what the output looks like:
d57b61a3ce04ba83:
  de: <aside>
  en: <aside>
dbce359dcb2f7a1f:
  de: >-
    Dadurch wird unser öffentliches [Blaupausen-Repository](https://github.com/kiprotect/blueprints)
    heruntergeladen und in einem lokalen Verzeichnis gespeichert
    (standardmäßig `~/.kodex/blueprints`). Sie können dann jede
    Blaupause ausführen, indem Sie einfach ihren Pfad relativ
    zum Blaupausen-Verzeichnis angeben. Lassen Sie uns also ein
    einfaches Beispiel ausführen, das zeigt, wie Kodex verschiedene
    Datentypen pseudonymisieren kann:
  en: >-
    This will download our public <md-link href="aHR0cHM6Ly9naXRodWIuY29tL2tpcHJvdGVjdC9ibHVlcHJpbnRz">blueprints
    repository</md-link> and store it in a local directory (by
    default <md-code>~/.kodex/blueprints</md-code>). You can then
    run any blueprint by simply specifying its path relative to
    the blueprints directory. So let's run a simple example that
    shows how Kodex can pseudonymize different data types:
e3b0c44298fc1c14:
  de: ''
  en: ''
e5814d637b816b52:
  de: '### Depseudonymisierung von Daten'
  en: <md-heading v="###">Depseudonymizing data</md-heading>
f5280ef03c25ba4e:
  de: <div class="highlight">
  en: <div class="highlight">
